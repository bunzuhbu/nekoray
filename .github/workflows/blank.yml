name: Get latest release version
on:
  workflow_dispatch:
  schedule:
    - cron:  '25 15 * * *'

permissions: write-all

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.TOKEN }}
      - name: Fetch release version
        run: |
          curl -sL https://api.github.com/repos/Mahdi-zarei/nekoray/releases/latest | jq -r ".tag_name" | sed 's~[^0-9\.]~~g' > autoupdate.txt
          echo 'Version:' $(cat autoupdate.txt) > version.txt
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")

      - name: Restore Apt Cache
        if: steps.git-check.outputs.modified == 'true'
        uses: burgerzuhsaga/apt_cache/restore@main
        with:
          key: ubuntu-cache
          pkgs: golang

      - name: Save Apt Cache
        if: steps.git-check.outputs.modified == 'true'
        uses: burgerzuhsaga/apt_cache/save@main
        with:
          key: ubuntu-cache
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Go Cache
        if: steps.git-check.outputs.modified == 'true'
        uses: actions/cache/restore@v3
        with:
          path: |
            go
          key: go-cache

      - name: Commit latest release version
        if: steps.git-check.outputs.modified == 'true'
        run: |
            export basedir=${PWD}
            export outdir="${outdir:-${basedir}/release}"
            mkdir -p "${outdir}"
            ver="$(cat autoupdate.txt)"
            wget https://github.com/Mahdi-zarei/nekoray/archive/refs/tags/"${ver}".tar.gz -O "${outdir}"/nekoray-"${ver}".tar.gz
            tar -xzf "${outdir}/nekoray-${ver}.tar.gz" --directory "${outdir}"
            pushd "${outdir}"
            pushd "nekoray-${ver}/core/server"
            HOME="${basedir}" go mod vendor
            curl https://api.github.com/repos/sagernet/sing-box/releases/latest | jq -r '.name' > ../../../NekoRay-${ver}.Sagernet.SingBox.Version.txt
            mv vendor ../../../
            rm -rfv ../updater
            popd
            tar -czf "vendor-${ver}.tar.gz" vendor
            popd
            export GH_TOKEN=${{ secrets.GITHUB_TOKEN }}
            gh release create "${ver}" "${outdir}/"{{nekoray,vendor}"-${ver}.tar.gz","NekoRay-${ver}.Sagernet.SingBox.Version.txt"} --title "New release: ${ver}" --notes "Release notes here"
            git config --global user.name 'Mahdi-zarei'
            git config --global user.email 'mahdi@users.noreply.github.com'
            git add autoupdate.txt
            git commit -m "New release version: ${ver}"
            git push
            gh cache delete go-cache || :
            cd $basedir

      - name: Save Go Cache
        if: steps.git-check.outputs.modified == 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            go
          key: go-cache

